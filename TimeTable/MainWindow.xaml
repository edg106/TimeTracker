<Window x:Class="TimeTable.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:VM="clr-namespace:TimeTable"
        Title="Prosoft Zeiterfasser" SizeToContent="WidthAndHeight" x:Name="window" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" Topmost="True" ShowInTaskbar="False" ShowActivated="False" ResizeMode="NoResize">

    <Window.Resources>
        <VM:StringToRoundedDateTimeConverter x:Key="StringToRoundedDateTimeConverter"/>
        <VM:TimeTableClass x:Key="Context"/>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <!--<Window.ContentTemplate>
        <DataTemplate>
            <Border CornerRadius="10" BorderThickness="5" BorderBrush="Black">
                <Grid x:Name="MainOuterGrid" MaxWidth="100" Background="Beige" MouseLeftButtonDown="TitleBarGridMouseLeftButtonDown" DataContext="{StaticResource ResourceKey=Context}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Right" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding Uhrzeit, Mode=OneWay}" x:Name="lbl1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" FontSize="15" FontWeight="ExtraBold" Background="Beige"/>
                        <Button Margin="0,0,3,0" Content="x" Command="{Binding Path=CloseCommand}" Height="20" Width="20" FontSize="10" Grid.Column="1"/>
                    </Grid>
                    <Popup Name="MainPopup" MinHeight="400" MinWidth="400">
                        <Grid Background="Beige" Name="MainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Calendar Margin="3,0,0,0" SelectedDate="{Binding CurrentDate}" HorizontalAlignment="Left"/>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <ListBox Margin="3" ItemsSource="{Binding Path=InfoLabels}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Label Content="{Binding Key}"/>
                                                            <Label Content=": "/>
                                                            <Label Content="{Binding Value}"/>
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                                <Button Content="Start" Command="{Binding Path=StartWorkCommand}" Grid.Row="1"  Margin="3"/>
                                <Popup  x:Name="PopUp" StaysOpen="True" IsOpen="False">
                                    <StackPanel>
                                        <Grid Width="{Binding ElementName=btn, Path=ActualWidth}" DataContext="{Binding NewTime}" Background="Beige">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*" MinHeight="40"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Label Content="Gebucht?" Grid.Column="0" Grid.Row="0"/>
                                            <Label  Content="Zeit"  Grid.Column="0" Grid.Row="1"/>
                                            <Label Content="Ticket" Grid.Column="0" Grid.Row="2"/>
                                            <Label Content="Kommentar" Grid.Column="0" Grid.Row="3"/>
                                            <CheckBox IsThreeState="False" IsChecked="{Binding Path=Gebucht}" Grid.Column="1" Grid.Row="0"/>
                                            <TextBox Text="{Binding Path=Dauer, Converter={StaticResource StringToRoundedDateTimeConverter}}" Grid.Column="1" Grid.Row="1"/>
                                            <TextBox  Text="{Binding Path=Ticket}" Grid.Column="1" Grid.Row="2"/>
                                            <TextBox  Text="{Binding Path=Kommentar}" Grid.Column="1" Grid.Row="3"/>
                                        </Grid>
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton IsChecked="{Binding IsChecked, ElementName=btn}" Command="{Binding Path=OkCommand}" Content="OK" Grid.Column="0" Grid.Row="5" />
                                            <ToggleButton IsChecked="{Binding ElementName=btn,Path=IsChecked}" Command="{Binding Path=AbbrechenCommand}" Content="Abbrechen" Grid.Column="1" Grid.Row="5"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Popup>
                                <Button Content="Ende" Command="{Binding Path=EndWorkCommand}" Grid.Row="2"  Margin="3"/>
                            </Grid>
                            <ToggleButton IsChecked="{Binding ElementName=PopUp, Path=IsOpen}" Command="{Binding Path=AddCommand}" Content="Neue Zeit buchen" Grid.Row="1" Grid.ColumnSpan="2" Margin="3" Name="btn" />

                            <DataGrid  Margin="3" Grid.Row="2" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=Zeitplan}" Grid.ColumnSpan="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" HeadersVisibility="Column">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="Gebucht?" IsThreeState="False" Binding="{Binding Path=Gebucht, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTextColumn Header="Zeit" Binding="{Binding Dauer, Converter={StaticResource StringToRoundedDateTimeConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTemplateColumn Header="Ticket">
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Path=Ticket, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                <Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="{Binding Path=TicketUri}">
                                    <TextBlock Text="{Binding Path=Ticket}" />
                                </Hyperlink>
                            </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Kommentar" Binding="{Binding Path=Kommentar, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Popup>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition SourceName="PopUp" Property="IsOpen" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="MainPopup" Property="IsOpen" Value="True"></Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="False"/>
                        <Condition SourceName="PopUp" Property="IsOpen" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="MainPopup" Property="IsOpen" Value="false"></Setter>
                </MultiTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.ContentTemplate>-->
    <Border CornerRadius="10" BorderThickness="5" BorderBrush="Black">
        <Grid x:Name="MainOuterGrid" MaxWidth="100" Background="Beige" MouseLeftButtonDown="TitleBarGridMouseLeftButtonDown" DataContext="{StaticResource ResourceKey=Context}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid HorizontalAlignment="Right" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Uhrzeit, Mode=OneWay}" x:Name="lbl1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" FontSize="15" FontWeight="ExtraBold" Background="Beige"/>
                <Button Margin="0,0,3,0" Content="x" Command="{Binding Path=CloseCommand}" Height="20" Width="20" FontSize="10" Grid.Column="1"/>
            </Grid>
            <Popup Name="OuterPopUp" MouseLeave="OuterPopUp_MouseLeave_1" StaysOpen="True" MinHeight="400" MinWidth="400">
                <Grid Background="Beige" Name="MainGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Calendar Margin="3,0,0,0" SelectedDate="{Binding CurrentDate}" HorizontalAlignment="Left"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <ListBox Margin="3" ItemsSource="{Binding Path=InfoLabels}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="{Binding Key}"/>
                                                    <Label Content=": "/>
                                                    <Label Content="{Binding Value}"/>
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <Button Content="Start" Command="{Binding Path=StartWorkCommand}" Grid.Row="1"  Margin="3"/>
                        <Popup  x:Name="PopUp" StaysOpen="True" IsOpen="False">
                            <StackPanel>
                                <Grid Width="{Binding ElementName=btn, Path=ActualWidth}" DataContext="{Binding NewTime}" Background="Beige">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*" MinHeight="40"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Label Content="Gebucht?" Grid.Column="0" Grid.Row="0"/>
                                    <Label  Content="Zeit"  Grid.Column="0" Grid.Row="1"/>
                                    <Label Content="Ticket" Grid.Column="0" Grid.Row="2"/>
                                    <Label Content="Kommentar" Grid.Column="0" Grid.Row="3"/>
                                    <CheckBox IsThreeState="False" IsChecked="{Binding Path=Gebucht}" Grid.Column="1" Grid.Row="0"/>
                                    <TextBox Text="{Binding Path=Dauer, Converter={StaticResource StringToRoundedDateTimeConverter}}" Grid.Column="1" Grid.Row="1"/>
                                    <TextBox  Text="{Binding Path=Ticket}" Grid.Column="1" Grid.Row="2"/>
                                    <TextBox  Text="{Binding Path=Kommentar}" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton IsChecked="{Binding IsChecked, ElementName=btn}" Command="{Binding Path=OkCommand}" Content="OK" Grid.Column="0" Grid.Row="5" />
                                    <ToggleButton IsChecked="{Binding ElementName=btn,Path=IsChecked}" Command="{Binding Path=AbbrechenCommand}" Content="Abbrechen" Grid.Column="1" Grid.Row="5"/>
                                </StackPanel>
                            </StackPanel>
                        </Popup>
                        <Button Content="Ende" Command="{Binding Path=EndWorkCommand}" Grid.Row="2"  Margin="3"/>
                    </Grid>
                    <ToggleButton IsChecked="{Binding ElementName=PopUp, Path=IsOpen}" Command="{Binding Path=AddCommand}" Content="Neue Zeit buchen" Grid.Row="1" Grid.ColumnSpan="2" Margin="3" Name="btn" />

                    <DataGrid  Margin="3" Grid.Row="2" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=Zeitplan}" Grid.ColumnSpan="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" HeadersVisibility="Column">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Gebucht?" IsThreeState="False" Binding="{Binding Path=Gebucht, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Zeit" Binding="{Binding Dauer, Converter={StaticResource StringToRoundedDateTimeConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTemplateColumn Header="Ticket">
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Ticket, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                <Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="{Binding Path=TicketUri}">
                                    <TextBlock Text="{Binding Path=Ticket}" />
                                </Hyperlink>
                            </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Kommentar" Binding="{Binding Path=Kommentar, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Popup>
        </Grid>
    </Border>
</Window>
